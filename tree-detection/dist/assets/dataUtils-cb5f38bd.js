import{L as G,N as X,ee as Lt,P as Rt,X as Nt,s as Et,r as L,t as K,cE as jt,ah as Z,q as ft,cO as Ot,w as nt,f as qt,bx as Gt,aK as Wt,d3 as Tt,a$ as Xt}from"./index-5df536c7.js";let yt=class{constructor(e=null,n=null,r=null){this.minValue=e,this.maxValue=n,this.noDataValue=r}};const zt=9999999e31,Jt=2e-7,Kt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};function ut(t){return Kt[t]??[-34028234663852886e22,34028234663852886e22]}function ke(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:a,pixelType:s}=t,l=r[0].length,c=t.bandMasks??[],o=t.mask??new Uint8Array(l).fill(255),h=s==="f32"||s==="f64",i=ut(s);let u=!1;for(let p=0;p<r.length;p++){const f=typeof e=="number"?e:e[p];if(f==null)continue;const m=(a==null?void 0:a[p].minValue)??i[0],d=(a==null?void 0:a[p].maxValue)??i[1];if(m>f+Number.EPSILON||d<f-Number.EPSILON)continue;const g=c[p]||new Uint8Array(l).fill(255),k=r[p],M=n==null?void 0:n.customFloatTolerance;if(h&&M!==0){let w=M;w||(w=Math.abs(f)>=zt?Jt*Math.abs(f):s==="f32"?2**-23:Number.EPSILON);for(let x=0;x<k.length;x++)g[x]&&Math.abs(k[x]-f)<w&&(k[x]=0,g[x]=0,o[x]=0,u=!0)}else for(let w=0;w<k.length;w++)g[w]&&k[w]===f&&(k[w]=0,g[w]=0,o[w]=0,u=!0);c[p]=g}u&&(t.bandMasks=c,t.mask=o),u&&"updateStatistics"in t&&t.updateStatistics()}var tt;let O=tt=class extends Nt{static createEmptyBand(t,e){return new(tt.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Et("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new yt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>this._calculateBandStatistics(n,this.mask));const t=this.mask;let e=0;if(L(t))for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=ut(t),r=this.pixels,a=this.width*this.height,s=r.length;let l,c,o;const h=[];for(let i=0;i<s;i++){o=tt.createEmptyBand(t,a),l=r[i];for(let u=0;u<a;u++)c=l[u],o[u]=c>n?n:c<e?e:c;h.push(o)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(K(t)||t.length===0||!e||e.length===0)return this;const r=e.length,a=t.some(l=>l>=e.length),s=r===t.length&&!t.some((l,c)=>l!==c);return a||s?this:new tt({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map(l=>e[l]),statistics:n&&t.map(l=>n[l])})}clone(){const t=new tt({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;L(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const n=tt.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=jt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:a}=this;if(!t||!a||!a.length)return void Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,l,c,o;s=l=c=a[0],a.length>=3?(l=a[1],c=a[2]):a.length===2&&(l=a[1]);const h=new Uint32Array(t),i=this.width*this.height;if(s.length===i)if(L(e)&&e.length===i)if(n)for(o=0;o<i;o++){const u=e[o];if(u){const p=u/255;h[o]=r?u<<24|c[o]*p<<16|l[o]*p<<8|s[o]*p:u<<24|c[o]<<16|l[o]<<8|s[o]}}else for(o=0;o<i;o++)e[o]&&(h[o]=255<<24|c[o]<<16|l[o]<<8|s[o]);else for(o=0;o<i;o++)h[o]=255<<24|c[o]<<16|l[o]<<8|s[o];else Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!e||!e.length)return void Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let s=1,l=0,c=1;if(r&&r.length>0){for(const d of r)if(d.minValue!=null&&(l=Math.min(l,d.minValue)),d.maxValue!=null&&d.minValue!=null){const g=d.maxValue-d.minValue;c=Math.max(c,g)}s=255/c}else{let d=255;a==="s8"?(l=-128,d=127):a==="u16"?d=65535:a==="s16"?(l=-32768,d=32767):a==="u32"?d=4294967295:a==="s32"?(l=-2147483648,d=2147483647):a==="f32"?(l=-34e38,d=34e38):a==="f64"&&(l=-Number.MAX_VALUE,d=Number.MAX_VALUE),s=255/(d-l)}const o=new Uint32Array(t),h=this.width*this.height;let i,u,p,f,m;if(i=u=p=e[0],i.length!==h)return Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),L(n)&&n.length===h)for(f=0;f<h;f++)n[f]&&(o[f]=255<<24|(p[f]-l)*s<<16|(u[f]-l)*s<<8|(i[f]-l)*s);else for(f=0;f<h;f++)o[f]=255<<24|(p[f]-l)*s<<16|(u[f]-l)*s<<8|(i[f]-l)*s;else if(L(n)&&n.length===h)for(f=0;f<h;f++)m=(i[f]-l)*s,n[f]&&(o[f]=255<<24|m<<16|m<<8|m);else for(f=0;f<h;f++)m=(i[f]-l)*s,o[f]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,a,s,l;r=a=s=e[0],e.length>=3?(a=e[1],s=e[2]):e.length===2&&(a=e[1]);const c=this.width*this.height;if(r.length!==c)return Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let o=0;if(L(n)&&n.length===c)for(l=0;l<c;l++)t[o++]=r[l],t[o++]=a[l],t[o++]=s[l],t[o++]=1&n[l];else for(l=0;l<c;l++)t[o++]=r[l],t[o++]=a[l],t[o++]=s[l],t[o++]=1}_calculateBandStatistics(t,e){let n=1/0,r=-1/0;const a=t.length;let s,l=0;if(L(e))for(s=0;s<a;s++)e[s]&&(l=t[s],n=l<n?l:n,r=l>r?l:r);else for(s=0;s<a;s++)l=t[s],n=l<n?l:n,r=l>r?l:r;return new yt(n,r)}};G([X({json:{write:!0}})],O.prototype,"width",void 0),G([X({json:{write:!0}})],O.prototype,"height",void 0),G([X({json:{write:!0}})],O.prototype,"pixelType",void 0),G([Lt("pixelType")],O.prototype,"castPixelType",null),G([X({json:{write:!0}})],O.prototype,"validPixelCount",void 0),G([X({json:{write:!0}})],O.prototype,"mask",void 0),G([X({json:{write:!0}})],O.prototype,"maskIsAlpha",void 0),G([X({json:{write:!0}})],O.prototype,"pixels",void 0),G([X()],O.prototype,"premultiplyAlpha",void 0),G([X({json:{write:!0}})],O.prototype,"statistics",void 0),G([X({json:{write:!0}})],O.prototype,"depthCount",void 0),G([X({json:{write:!0}})],O.prototype,"noDataValues",void 0),G([X({json:{write:!0}})],O.prototype,"bandMasks",void 0),O=tt=G([Rt("esri.layers.support.PixelBlock")],O);const _=O;var kt,Mt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(kt||(kt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(Mt||(Mt={}));const Me=6;function R(t){return L(t)&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function Ae(t,e){if(!(e!=null&&e.length)||!R(t))return t;const n=t.pixels.length;return e&&e.some(r=>r>=n)||n===1&&e.length===1&&e[0]===0?t:n!==e.length||e.some((r,a)=>r!==a)?new _({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map(r=>t.pixels[r]),statistics:t.statistics&&e.map(r=>t.statistics[r])}):t}function be(t){if(!(t!=null&&t.length)||t.some(i=>!R(i)))return null;if(t.length===1)return L(t[0])?t[0].clone():null;const e=t,{width:n,height:r,pixelType:a}=e[0];if(e.some(i=>i.width!==n||i.height!==r))return null;const s=e.map(({mask:i})=>i).filter(i=>i!=null);let l=null;s.length&&(l=new Uint8Array(n*r),l.set(s[0]),s.length>1&&St(s.slice(1),l));const c=[];e.forEach(({pixels:i})=>c.push(...i));const o=e.map(({statistics:i})=>i).filter(i=>i==null?void 0:i.length),h=[];return o.forEach(i=>h.push(...i)),new _({pixelType:a,width:n,height:r,mask:l,pixels:c,statistics:h.length?h:null})}function ve(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((u,p)=>u[0]-p[0]);let r=0;n[0][0]<0&&(r=n[0][0]);const a=Math.max(256,n[n.length-1][0]-r+1),s=new Uint8Array(4*a),l=[];let c,o=0,h=0;const i=n[0].length===5;if(a>65536)return n.forEach(u=>{l[u[0]-r]=i?u.slice(1):u.slice(1).concat([255])}),{indexed2DColormap:l,offset:r,alphaSpecified:i};if(t.fillUnspecified)for(c=n[h],o=c[0]-r;o<a;o++)s[4*o]=c[1],s[4*o+1]=c[2],s[4*o+2]=c[3],s[4*o+3]=i?c[4]:255,o===c[0]-r&&(c=h===n.length-1?c:n[++h]);else for(o=0;o<n.length;o++)c=n[o],h=4*(c[0]-r),s[h]=c[1],s[h+1]=c[2],s[h+2]=c[3],s[h+3]=i?c[4]:255;return{indexedColormap:s,offset:r,alphaSpecified:i}}function Pe(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let a=n.mask;const s=n.width*n.height;if(r.length!==1)return t;const{indexedColormap:l,indexed2DColormap:c,offset:o,alphaSpecified:h}=e;let i=0;const u=r[0],p=new Uint8Array(u.length),f=new Uint8Array(u.length),m=new Uint8Array(u.length);let d,g=0;if(l){const k=l.length-1;if(L(a))for(i=0;i<s;i++)a[i]&&(g=4*(u[i]-o),g<o||g>k?a[i]=0:(p[i]=l[g],f[i]=l[g+1],m[i]=l[g+2],a[i]=l[g+3]));else{for(a=new Uint8Array(s),i=0;i<s;i++)g=4*(u[i]-o),g<o||g>k?a[i]=0:(p[i]=l[g],f[i]=l[g+1],m[i]=l[g+2],a[i]=l[g+3]);n.mask=a}}else if(c)if(L(a))for(i=0;i<s;i++)a[i]&&(d=c[u[i]],p[i]=d[0],f[i]=d[1],m[i]=d[2],a[i]=d[3]);else{for(a=new Uint8Array(s),i=0;i<s;i++)d=c[u[i]],p[i]=d[0],f[i]=d[1],m[i]=d[2],a[i]=d[3];n.mask=a}return n.pixels=[p,f,m],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function Ue(t,e){if(!R(t))return null;const{pixels:n,mask:r}=t,a=n.length;let s=e.lut;const{offset:l}=e;s&&s[0].length===1&&(s=n.map(()=>s));const c=[],o=e.outputPixelType||"u8";for(let i=0;i<a;i++){const u=It(n[i],r,s[i],l||0,o);c.push(u)}const h=new _({width:t.width,height:t.height,pixels:c,mask:r,pixelType:o});return h.updateStatistics(),h}function It(t,e,n,r,a){const s=t.length,l=_.createEmptyBand(a,s);if(e)for(let c=0;c<s;c++)e[c]&&(l[c]=n[t[c]-r]);else for(let c=0;c<s;c++)l[c]=n[t[c]-r];return l}function $e(t,e){if(!R(t))return null;const n=t.clone(),{pixels:r}=n,a=n.width*n.height,s=e.length,l=Math.floor(s/2),c=e[Math.floor(l)],o=r[0];let h,i,u,p,f,m,d=!1;const g=new Uint8Array(a),k=new Uint8Array(a),M=new Uint8Array(a);let w=n.mask;const x=e[0].mappedColor.length===4;for(w||(w=new Uint8Array(a),w.fill(x?255:1),n.mask=w),f=0;f<a;f++)if(w[f]){for(h=o[f],d=!1,m=l,i=c,u=0,p=s-1;p-u>1;){if(h===i.value){d=!0;break}h>i.value?u=m:p=m,m=Math.floor((u+p)/2),i=e[Math.floor(m)]}d||(h===e[u].value?(i=e[u],d=!0):h===e[p].value?(i=e[p],d=!0):h<e[u].value?(d=!1,i=null):h>e[u].value&&(h<e[p].value?(i=e[u],d=!0):p===s-1?(d=!1,i=null):(i=e[p],d=!0))),d?(g[f]=i.mappedColor[0],k[f]=i.mappedColor[1],M[f]=i.mappedColor[2],w[f]=i.mappedColor[3]):g[f]=k[f]=M[f]=w[f]=0}return n.pixels=[g,k,M],n.mask=w,n.pixelType="u8",n.maskIsAlpha=x,n}function Te(t,e){if(!R(t))return null;const{width:n,height:r}=t,{inputRanges:a,outputValues:s,outputPixelType:l,noDataRanges:c,allowUnmatched:o,isLastInputRangeInclusive:h}=e,i=t.pixels[0],u=_.createEmptyBand(l,i.length),p=t.mask,f=new Uint8Array(n*r);p?f.set(p):f.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,d=a.map(w=>w-m);d[0]=a[0],d[d.length-1]=a[a.length-1]+(h?1e-6:0);const g=a.length/2,[k,M]=ut(l);for(let w=0;w<r;w++)for(let x=0;x<n;x++){const y=w*n+x;if(f[y]){const A=i[y];let b=!1;for(let v=g-1;v>=0;v--)if(A===d[2*v]||A>d[2*v]&&A<d[2*v+1]){u[y]=s[v],b=!0;break}b||(o?u[y]=A>M?M:A<k?k:A:f[y]=0)}}if(c!=null&&c.length)for(let w=0;w<r;w++)for(let x=0;x<n;x++){const y=w*n+x;if(!p||p[y]){const A=i[y];for(let b=0;b<g;b+=2)if(A>=c[b]&&A<=c[b+1]){u[y]=0,f[y]=0;break}}}return new _({width:n,height:r,pixelType:l,pixels:[u],mask:f})}function At(t,e,n,r){const a=n!=null&&n.length>=2?new Set(n):null,s=(n==null?void 0:n.length)===1?n[0]:null,l=!!(e!=null&&e.length);for(let c=0;c<t.length;c++)if(r[c]){const o=t[c];if(l){let h=!1;for(let i=0;i<e.length;i+=2)if(o>=e[i]&&o<=e[i+1]){h=!0;break}h||(r[c]=0)}r[c]&&(o===s||a!=null&&a.has(o))&&(r[c]=0)}}function bt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let s=0;s<t.length;s++)if(t[s][r]){a=!0;break}a||(e[r]=0)}}function St(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let s=0;s<t.length;s++)if(t[s][r]===0){a=!0;break}a&&(e[r]=0)}}function Ie(t,e){if(!R(t))return null;const{width:n,height:r,pixels:a}=t,s=n*r,l=new Uint8Array(s);t.mask?l.set(t.mask):l.fill(255);const c=a.length,{includedRanges:o,noDataValues:h,outputPixelType:i,matchAll:u,lookups:p}=e;if(p){const f=[];for(let m=0;m<c;m++){const d=p[m],g=It(a[m],l,d.lut,d.offset||0,"u8");f.push(g)}f.length===1?l.set(f[0]):u?bt(f,l):St(f,l)}else if(u){const f=[];for(let m=0;m<c;m++){const d=new Uint8Array(s);d.set(l),At(a[m],o==null?void 0:o.slice(2*m,2*m+2),h==null?void 0:h[m],d),f.push(d)}f.length===1?l.set(f[0]):bt(f,l)}else for(let f=0;f<c;f++)At(a[f],o==null?void 0:o.slice(2*f,2*f+2),h==null?void 0:h[f],l);return new _({width:n,height:r,pixelType:i,pixels:a,mask:l})}function Se(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:a,noDataRanges:s,isLastInputRangeInclusive:l,outputPixelType:c}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const o=e.includes("16")?65536:256,h=e.includes("s")?-o/2:0,i=_.createEmptyBand(c,o),u=new Uint8Array(o);a&&u.fill(255);const[p,f]=ut(c);if(n!=null&&n.length&&(r!=null&&r.length)){const d=n.map(g=>g-1e-6);d[0]=n[0],l&&(d[d.length-1]=n[n.length-1]);for(let g=0;g<d.length;g++){const k=r[g]>f?f:r[g]<p?p:r[g],M=Math.ceil(d[2*g]-h),w=Math.floor(d[2*g+1]-h);for(let x=M;x<=w;x++)i[x]=k,u[x]=255}}if(s!=null&&s.length)for(let m=0;m<s.length;m++){const d=Math.ceil(s[2*m]-h),g=Math.floor(s[2*m+1]-h);for(let k=d;k<=g;k++)u[k]=0}return{lut:i,offset:h,mask:u}}function Be(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const r=t.includes("16")?65536:256,a=t.includes("s")?-r/2:0,s=new Uint8Array(r);if(e)for(let l=0;l<e.length;l++){const c=Math.ceil(e[2*l]-a),o=Math.floor(e[2*l+1]-a);for(let h=c;h<=o;h++)s[h]=255}else s.fill(255);if(n)for(let l=0;l<n.length;l++)s[n[l]-a]=0;return{lut:s,offset:a}}function Ht(t,e,n,r,a,s,l,c){return{xmin:a<=n*t?0:a<n*t+t?a-n*t:t,ymin:s<=r*e?0:s<r*e+e?s-r*e:e,xmax:a+l<=n*t?0:a+l<n*t+t?a+l-n*t:t,ymax:s+c<=r*e?0:s+c<r*e+e?s+c-r*e:e}}function Ce(t,e){if(!t||t.length===0)return null;const n=t.find(m=>m.pixelBlock);if(!n||K(n.pixelBlock))return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,a=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(r,a),l=t.sort((m,d)=>Math.abs(m.extent.ymax-d.extent.ymax)>s?d.extent.ymax-m.extent.ymax:Math.abs(m.extent.xmin-d.extent.xmin)>s?m.extent.xmin-d.extent.xmin:0),c=Math.min.apply(null,l.map(m=>m.extent.xmin)),o=Math.min.apply(null,l.map(m=>m.extent.ymin)),h=Math.max.apply(null,l.map(m=>m.extent.xmax)),i=Math.max.apply(null,l.map(m=>m.extent.ymax)),u={x:Math.round((e.xmin-c)/r),y:Math.round((i-e.ymax)/a)},p={width:Math.round((h-c)/r),height:Math.round((i-o)/a)},f={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/a)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==l.length||u.x<0||u.y<0||p.width<f.width||p.height<f.height?null:{extent:e,pixelBlock:Qt(l.map(m=>m.pixelBlock),p,{clipOffset:u,clipSize:f})}}function dt(t,e,n,r,a,s){const{width:l,height:c}=n.block,{x:o,y:h}=n.offset,{width:i,height:u}=n.mosaic,p=Ht(l,c,r,a,o,h,i,u);let f=0,m=0;if(s){const d=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,g=l*s.resolutionX,k=s.startX+r*g;k<d&&k+g>d?m=s.rightPadding:k>=d&&(f=s.leftMargin-s.rightPadding,m=0)}if(p.xmax-=m,typeof e!="number")for(let d=p.ymin;d<p.ymax;d++){const g=(a*c+d-h)*i+(r*l-o)+f,k=d*l;for(let M=p.xmin;M<p.xmax;M++)t[g+M]=e[k+M]}else for(let d=p.ymin;d<p.ymax;d++){const g=(a*c+d-h)*i+(r*l-o)+f;for(let k=p.xmin;k<p.xmax;k++)t[g+k]=e}}function Qt(t,e,n={}){const{clipOffset:r,clipSize:a,alignmentInfo:s,blockWidths:l}=n;if(l)return Yt(t,e,{blockWidths:l});const c=t.find(b=>R(b));if(K(c))return null;const o=a?a.width:e.width,h=a?a.height:e.height,i=c.width,u=c.height,p=e.width/i,f=e.height/u,m={offset:r||{x:0,y:0},mosaic:a||e,block:{width:i,height:u}},d=c.pixelType,g=_.getPixelArrayConstructor(d),k=c.pixels.length,M=[];let w,x;for(let b=0;b<k;b++){x=new g(o*h);for(let v=0;v<f;v++)for(let P=0;P<p;P++){const U=t[v*p+P];R(U)&&(w=U.pixels[b],dt(x,w,m,P,v,s))}M.push(x)}let y;if(t.some(b=>K(b)||L(b.mask)&&b.mask.length>0)){y=new Uint8Array(o*h);for(let b=0;b<f;b++)for(let v=0;v<p;v++){const P=t[b*p+v],U=L(P)?P.mask:null;L(U)?dt(y,U,m,v,b,s):dt(y,P?1:0,m,v,b,s)}}const A=new _({width:o,height:h,pixels:M,pixelType:d,mask:y});return A.updateStatistics(),A}function Yt(t,e,n){const r=t.find(f=>L(f));if(K(r))return null;const a=t.some(f=>!L(f)||!!f.mask),{width:s,height:l}=e,c=a?new Uint8Array(s*l):null,{blockWidths:o}=n,h=[],i=r.getPlaneCount(),u=_.getPixelArrayConstructor(r.pixelType);if(a)for(let f=0,m=0;f<t.length;m+=o[f],f++){const d=t[f];if(!R(d))continue;const g=ft(d.mask);for(let k=0;k<l;k++)for(let M=0;M<o[f];M++)c[k*s+M+m]=g==null?255:g[k*d.width+M]}for(let f=0;f<i;f++){const m=new u(s*l);for(let d=0,g=0;d<t.length;g+=o[d],d++){const k=t[d];if(!R(k))continue;const M=k.pixels[f];if(M!=null)for(let w=0;w<l;w++)for(let x=0;x<o[d];x++)m[w*s+x+g]=M[w*k.width+x]}h.push(m)}const p=new _({width:s,height:l,mask:c,pixels:h,pixelType:r.pixelType});return p.updateStatistics(),p}function Fe(t,e,n){if(!R(t))return null;const{width:r,height:a}=t,s=e.x,l=e.y,c=n.width+s,o=n.height+l;if(s<0||l<0||c>r||o>a||s===0&&l===0&&c===r&&o===a)return t;t.mask||(t.mask=new Uint8Array(r*a));const h=t.mask;for(let i=0;i<a;i++){const u=i*r;for(let p=0;p<r;p++)h[u+p]=i<l||i>=o||p<s||p>=c?0:1}return t.updateStatistics(),t}function Zt(t){if(!R(t))return null;const e=t.clone(),{width:n,height:r,pixels:a}=t,s=a[0],l=e.pixels[0],c=ft(t.mask);for(let o=2;o<r-1;o++){const h=new Map;for(let u=o-2;u<o+2;u++)for(let p=0;p<4;p++){const f=u*n+p;rt(h,s[f],c?c[f]:1)}l[o*n]=vt(h),l[o*n+1]=l[o*n+2]=l[o*n];let i=3;for(;i<n-1;i++){let u=(o-2)*n+i+1;rt(h,s[u],c?c[u]:1),u=(o-1)*n+i+1,rt(h,s[u],c?c[u]:1),u=o*n+i+1,rt(h,s[u],c?c[u]:1),u=(o+1)*n+i+1,rt(h,s[u],c?c[u]:1),u=(o-2)*n+i-3,at(h,s[u],c?c[u]:1),u=(o-1)*n+i-3,at(h,s[u],c?c[u]:1),u=o*n+i-3,at(h,s[u],c?c[u]:1),u=(o+1)*n+i-3,at(h,s[u],c?c[u]:1),l[o*n+i]=vt(h)}l[o*n+i+1]=l[o*n+i]}for(let o=0;o<n;o++)l[o]=l[n+o]=l[2*n+o],l[(r-1)*n+o]=l[(r-2)*n+o];return e.updateStatistics(),e}function vt(t){if(t.size===0)return 0;let e=0,n=-1,r=0;const a=t.keys();let s=a.next();for(;!s.done;)r=t.get(s.value),r>e&&(n=s.value,e=r),s=a.next();return n}function at(t,e,n){if(n===0)return;const r=t.get(e);r===1?t.delete(e):t.set(e,r-1)}function rt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function te(t,e,n){let{x:r,y:a}=e;const{width:s,height:l}=n;if(r===0&&a===0&&l===t.height&&s===t.width)return t;const{width:c,height:o}=t,h=Math.max(0,a),i=Math.max(0,r),u=Math.min(r+s,c),p=Math.min(a+l,o);if(u<0||p<0||!R(t))return null;r=Math.max(0,-r),a=Math.max(0,-a);const{pixels:f}=t,m=s*l,d=f.length,g=[];for(let x=0;x<d;x++){const y=f[x],A=_.createEmptyBand(t.pixelType,m);for(let b=h;b<p;b++){const v=b*c;let P=(b+a-h)*s+r;for(let U=i;U<u;U++)A[P++]=y[v+U]}g.push(A)}const k=new Uint8Array(m),M=ft(t.mask);for(let x=h;x<p;x++){const y=x*c;let A=(x+a-h)*s+r;for(let b=i;b<u;b++)k[A++]=M?M[y+b]:1}const w=new _({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:k});return w.updateStatistics(),w}function ee(t,e=!0){if(!R(t))return null;const{pixels:n,width:r,height:a,mask:s,pixelType:l}=t,c=[],o=Math.round(r/2),h=Math.round(a/2),i=a-1,u=r-1;for(let f=0;f<n.length;f++){const m=n[f],d=_.createEmptyBand(l,o*h);let g=0;for(let k=0;k<a;k+=2)for(let M=0;M<r;M+=2){const w=m[k*r+M];if(e){const x=M===u?w:m[k*r+M+1],y=k===i?w:m[k*r+M+r],A=M===u?y:k===i?x:m[k*r+M+r+1];d[g++]=(w+x+y+A)/4}else d[g++]=w}c.push(d)}let p=null;if(L(s)){p=new Uint8Array(o*h);let f=0;for(let m=0;m<a;m+=2)for(let d=0;d<r;d+=2){const g=s[m*r+d];if(e){const k=d===u?g:s[m*r+d+1],M=m===i?g:s[m*r+d+r],w=d===u?M:m===i?k:s[m*r+d+r+1];p[f++]=g*k*M*w?1:0}else p[f++]=g}}return new _({width:o,height:h,pixelType:l,pixels:c,mask:p})}function Ve(t,e,n){if(!R(t))return null;const{width:r,height:a}=e;let{width:s,height:l}=t;const c=new Map,o={x:0,y:0},h=n==null?1:1+n;let i=t;for(let u=0;u<h;u++){const p=Math.ceil(s/r),f=Math.ceil(l/a);for(let m=0;m<f;m++){o.y=m*a;for(let d=0;d<p;d++){o.x=d*r;const g=te(i,o,e);c.set(`${u}/${m}/${d}`,g)}}u<h-1&&(i=ee(i)),s=Math.round(s/2),l=Math.round(l/2)}return c}function Bt(t,e,n,r,a=0){const{width:s,height:l}=t,{width:c,height:o}=e,h=r.cols,i=r.rows,u=Math.ceil(c/h-.1/h),p=Math.ceil(o/i-.1/i);let f,m,d,g,k,M,w;const x=u*h,y=x*p*i,A=new Float32Array(y),b=new Float32Array(y),v=new Uint32Array(y),P=new Uint32Array(y);let U,B,I=0;for(let S=0;S<p;S++)for(let F=0;F<u;F++){f=12*(S*u+F),m=n[f],d=n[f+1],g=n[f+2],k=n[f+3],M=n[f+4],w=n[f+5];for(let T=0;T<i;T++){I=(S*i+T)*x+F*h,B=(T+.5)/i;for(let $=0;$<T;$++)U=($+.5)/h,A[I+$]=(m*U+d*B+g)*s+a,b[I+$]=(k*U+M*B+w)*l+a,v[I+$]=Math.floor(A[I+$]),P[I+$]=Math.floor(b[I+$])}f+=6,m=n[f],d=n[f+1],g=n[f+2],k=n[f+3],M=n[f+4],w=n[f+5];for(let T=0;T<i;T++){I=(S*i+T)*x+F*h,B=(T+.5)/i;for(let $=T;$<h;$++)U=($+.5)/h,A[I+$]=(m*U+d*B+g)*s+a,b[I+$]=(k*U+M*B+w)*l+a,v[I+$]=Math.floor(A[I+$]),P[I+$]=Math.floor(b[I+$])}}return{offsets_x:A,offsets_y:b,offsets_xi:v,offsets_yi:P,gridWidth:x}}function _e(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:a,offsets_y:s,gridWidth:l}=Bt(t,t,n,{rows:r[0],cols:r[1]}),{width:c,height:o}=t,h=new Float32Array(c*o),i=180/Math.PI;for(let u=0;u<o;u++)for(let p=0;p<c;p++){const f=u*l+p,m=u===0?f:f-l,d=u===o-1?f:f+l,g=a[m]-a[d],k=s[d]-s[m];if(isNaN(g)||isNaN(k))h[u*c+p]=90;else{let M=Math.atan2(k,g)*i;M=(360+M)%360,h[u*c+p]=M}}return h}function De(t,e,n,r,a="nearest"){if(!R(t))return null;a==="majority"&&(t=Zt(t));const{pixels:s,mask:l,pixelType:c}=t,o=t.width,h=t.height,i=_.getPixelArrayConstructor(c),u=s.length,{width:p,height:f}=e;let m=!1;for(let P=0;P<n.length;P+=3)n[P]===-1&&n[P+1]===-1&&n[P+2]===-1&&(m=!0);const{offsets_x:d,offsets_y:g,offsets_xi:k,offsets_yi:M,gridWidth:w}=Bt({width:o,height:h},e,n,r,a==="majority"?.5:0);let x;const y=(P,U,B)=>{const I=P instanceof Float32Array||P instanceof Float64Array?0:.5;for(let S=0;S<f;S++){x=S*w;for(let F=0;F<p;F++){if(d[x]<0||g[x]<0)P[S*p+F]=0;else if(B)P[S*p+F]=U[k[x]+M[x]*o];else{const T=Math.floor(d[x]),$=Math.floor(g[x]),C=Math.ceil(d[x]),V=Math.ceil(g[x]),j=d[x]-T,z=g[x]-$;if(!l||l[T+$*o]&&l[T+$*o]&&l[T+V*o]&&l[C+V*o]){const q=(1-j)*U[T+$*o]+j*U[C+$*o],W=(1-j)*U[T+V*o]+j*U[C+V*o];P[S*p+F]=(1-z)*q+z*W+I}else P[S*p+F]=U[k[x]+M[x]*o]}x++}}},A=[];let b;for(let P=0;P<u;P++)b=new i(p*f),y(b,s[P],a==="nearest"||a==="majority"),A.push(b);const v=new _({width:p,height:f,pixelType:c,pixels:A});if(L(l))v.mask=new Uint8Array(p*f),y(v.mask,l,!0);else if(m){v.mask=new Uint8Array(p*f);for(let P=0;P<p*f;P++)v.mask[P]=d[P]<0||g[P]<0?0:1}return v.updateStatistics(),v}const et=new Map;et.set("meter-per-second",1),et.set("kilometer-per-hour",.277778),et.set("knots",.514444),et.set("feet-per-second",.3048),et.set("mile-per-hour",.44704);const gt=180/Math.PI,xt=5,ct=new Ot({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function wt(t,e){return et.get(t)/et.get(e)||1}function Ct(t){return(450-t)%360}function Ft(t,e="geographic"){const[n,r]=t,a=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n)*gt;return s=(360+s)%360,e==="geographic"&&(s=Ct(s)),[a,s]}function Vt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=Ct(n)),n%=360;const r=t[0];return[r*Math.cos(n/gt),r*Math.sin(n/gt)]}function Le(t,e,n,r="geographic"){if(!R(t)||K(n))return t;const a=e==="vector-magdir"?t.clone():ft(Pt(t,e)),s=a.pixels[1];for(let l=0;l<s.length;l++)s[l]=r==="geographic"?(s[l]+n[l]+270)%360:(s[l]+360-n[l])%360;return e==="vector-magdir"?a:Pt(a,"vector-magdir")}function Pt(t,e,n="geographic",r=1){if(!R(t))return t;const{pixels:a,width:s,height:l}=t,c=s*l,o=a[0],h=a[1],i=t.pixelType.startsWith("f")?t.pixelType:"f32",u=_.createEmptyBand(i,c),p=_.createEmptyBand(i,c);let f=0;for(let d=0;d<l;d++)for(let g=0;g<s;g++)e==="vector-uv"?([u[f],p[f]]=Ft([o[f],h[f]],n),u[f]*=r):([u[f],p[f]]=Vt([o[f],h[f]],n),u[f]*=r,p[f]*=r),f++;const m=new _({pixelType:i,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,p]});return m.updateStatistics(),m}function Re(t,e,n=1){if(n===1||!R(t))return t;const r=t.clone(),{pixels:a,width:s,height:l}=r,c=a[0],o=a[1];let h=0;for(let i=0;i<l;i++)for(let u=0;u<s;u++)e==="vector-uv"?(c[h]*=n,o[h]*=n):c[h]*=n,h++;return r.updateStatistics(),r}function Ne(t,e,n,r,a){if(K(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const s=a.xmin,l=a.ymax,c=(t.xmax-t.xmin)/e*r,o=(t.ymax-t.ymin)/n*r,h=(c+o)/2;return t.xmin=s+Math.floor((t.xmin-s)/c)*c,t.xmax=s+Math.ceil((t.xmax-s)/c)*c,t.ymin=l+Math.floor((t.ymin-l)/o)*o,t.ymax=l+Math.ceil((t.ymax-l)/o)*o,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/o),resolution:h}}const ne=_t(0,0,0);function _t(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const a=r?-1:1,s=13*a,l=-7*a,c=-2*a,o=-16*a,h=21.75,[i,u]=E(0,e+s,n,h),[p,f]=E(t-5.5,e+l,n,h),[m,d]=E(t+5.5,e+l,n,h),[g,k]=E(t-1.5,e+c,n,h),[M,w]=E(t+1.5,e+c,n,h),[x,y]=E(t-1.5,e+o,n,h),[A,b]=E(t+1.5,e+o,n,h);return[i,u,p,f,g,k,M,w,m,d,x,y,A,b]}function ie(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,a=n?-1:1,s=5*a,l=20*a,c=25*a,o=45,h=0,i=0,u=2,p=0,f=u*a,m=n?1:-1,d=r/2*m;let[g,k]=[h+d,i-l],[M,w]=[g+u*m,k],[x,y]=[M-p*m,w+f],[A,b]=[h-d,i-c],[v,P]=[A+p*m,b-f],U=Math.ceil(t/xt),B=Math.floor(U/10);U-=8*B;const I=[],S=[];for(let H=0;H<U/2;H++,B--){B<=0&&U%2==1&&H===(U-1)/2&&(A=h,v=A+p*m,b=(b+k)/2,P=b-f);const[Q,ot]=E(A,b,e,o);if(B>0){const[it,st]=E(M,b,e,o),[lt,D]=E(g,k,e,o);I.push(it),I.push(st),I.push(Q),I.push(ot),I.push(lt),I.push(D)}else{const[it,st]=E(M,w,e,o),[lt,D]=E(x,y,e,o),[N,pt]=E(v,P,e,o);S.push(Q),S.push(ot),S.push(N),S.push(pt),S.push(lt),S.push(D),S.push(it),S.push(st)}b+=s,k+=s,w+=s,y+=s,P+=s}const[F,T]=E(h+d,i+l,e,o),$=(r/2+u)*m,[C,V]=E(h+$,i+l,e,o),[j,z]=E(h+d,i-c,e,o),[q,W]=E(h+$,i-c,e,o);return{pennants:I,barbs:S,shaft:[F,T,C,V,j,z,q,W]}}function E(t,e,n,r=1){const a=Math.sqrt(t*t+e*e)/r,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[a,(2*Math.PI+s-n)%(2*Math.PI)]}const ht=[0,1,3,6,10,16,21,27,33,40,47,55,63],se=[0,.5,1,1.5,2],le=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,r){const a=wt(r||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*a)break}else if(t<=e[s]*a)break;return Math.min(s-1,e.length-2)}function re(t,e,n,r,a){let s=0;switch(e){case"beaufort_kn":s=Y(t,ht,"knots",n);break;case"beaufort_km":s=Y(t,ht,"kilometer-per-hour",n);break;case"beaufort_ft":s=Y(t,ht,"feet-per-second",n);break;case"beaufort_m":s=Y(t,ht,"meter-per-second",n);break;case"classified_arrow":s=Y(t,a??[],r,n);break;case"ocean_current_m":s=Y(t,se,"meter-per-second",n);break;case"ocean_current_kn":s=Y(t,le,"knots",n)}return s}function oe(t,e){const{style:n,inputUnit:r,outputUnit:a,breakValues:s}=e,l=ct.fromJSON(r),c=ct.fromJSON(a),o=7*6,h=15;let i=0,u=0;const{width:p,height:f,mask:m}=t,d=t.pixels[0],g=t.pixels[1],k=L(m)?m.filter(y=>y>0).length:p*f,M=new Float32Array(k*o),w=new Uint32Array(h*k),x=e.invertDirection?_t(0,0,0,!1):ne;for(let y=0;y<f;y++)for(let A=0;A<p;A++){const b=y*p+A;if(!m||m[y*p+A]){const v=(g[b]+360)%360/180*Math.PI,P=re(d[b],n,l,c,s);for(let B=0;B<x.length;B+=2)M[i++]=(A+.5)/p,M[i++]=(y+.5)/f,M[i++]=x[B],M[i++]=x[B+1]+v,M[i++]=P,M[i++]=d[b];const U=7*(i/o-1);w[u++]=U,w[u++]=U+1,w[u++]=U+2,w[u++]=U+0,w[u++]=U+4,w[u++]=U+3,w[u++]=U+0,w[u++]=U+2,w[u++]=U+3,w[u++]=U+2,w[u++]=U+5,w[u++]=U+3,w[u++]=U+5,w[u++]=U+6,w[u++]=U+3}}return{vertexData:M,indexData:w}}const mt=[];function ae(t,e){if(mt.length===0)for(let f=0;f<30;f++)mt.push(ie(5*f,0,!e.invertDirection));const n=wt(ct.fromJSON(e.inputUnit),"knots"),{width:r,height:a,mask:s}=t,l=t.pixels[0],c=t.pixels[1],o=6,h=[],i=[];let u=0,p=0;for(let f=0;f<a;f++)for(let m=0;m<r;m++){const d=f*r+m,g=l[d]*n;if((!s||s[f*r+m])&&g>=xt){const k=(c[d]+360)%360/180*Math.PI,{pennants:M,barbs:w,shaft:x}=mt[Math.min(Math.floor(g/5),29)];if(M.length+w.length===0)continue;let y=h.length/o;const A=(m+.5)/r,b=(f+.5)/a;for(let v=0;v<M.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=M[v],h[u++]=M[v+1]+k,h[u++]=0,h[u++]=g;for(let v=0;v<w.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=w[v],h[u++]=w[v+1]+k,h[u++]=0,h[u++]=g;for(let v=0;v<x.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=x[v],h[u++]=x[v+1]+k,h[u++]=0,h[u++]=g;for(let v=0;v<M.length/6;v++)i[p++]=y,i[p++]=y+1,i[p++]=y+2,y+=3;for(let v=0;v<w.length/8;v++)i[p++]=y,i[p++]=y+1,i[p++]=y+2,i[p++]=y+1,i[p++]=y+2,i[p++]=y+3,y+=4;i[p++]=y+0,i[p++]=y+1,i[p++]=y+2,i[p++]=y+1,i[p++]=y+3,i[p++]=y+2,y+=4}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(i)}}function he(t,e){let r=0,a=0;const{width:s,height:l,mask:c}=t,o=t.pixels[0],h=[],i=[],u=wt(ct.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?xt:Number.MAX_VALUE;for(let f=0;f<l;f++)for(let m=0;m<s;m++){const d=o[f*s+m]*u;if((!c||c[f*s+m])&&d<p){for(let k=0;k<4;k++)h[r++]=(m+.5)/s,h[r++]=(f+.5)/l,h[r++]=k<2?-.5:.5,h[r++]=k%2==0?-.5:.5,h[r++]=0,h[r++]=d;const g=4*(r/24-1);i[a++]=g,i[a++]=g+1,i[a++]=g+2,i[a++]=g+1,i[a++]=g+2,i[a++]=g+3}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(i)}}function Ee(t,e){return e.style==="simple_scalar"?he(t,e):e.style==="wind_speed"?ae(t,e):oe(t,e)}function je(t,e,n,r=[0,0],a=.5){const{width:s,height:l,mask:c}=t,[o,h]=t.pixels,[i,u]=r,p=Math.round((s-i)/n),f=Math.round((l-u)/n),m=p*f,d=new Float32Array(m),g=new Float32Array(m),k=new Uint8Array(m),M=e==="vector-uv";for(let x=0;x<f;x++)for(let y=0;y<p;y++){let A=0;const b=x*p+y,v=Math.max(0,x*n+u),P=Math.max(0,y*n+i),U=Math.min(l,v+n),B=Math.min(s,P+n);for(let I=v;I<U;I++)for(let S=P;S<B;S++){const F=I*s+S;if(!c||c[F]){A++;const T=M?[o[F],h[F]]:[o[F],(360+h[F])%360],[$,C]=M?T:Vt(T);d[b]+=$,g[b]+=C}}if(A>=(U-v)*(B-P)*(1-a)){k[b]=1;const[I,S]=Ft([d[b]/A,g[b]/A]);d[b]=I,g[b]=S}else k[b]=0,d[b]=0,g[b]=0}const w=new _({width:p,height:f,pixels:[d,g],mask:k});return w.updateStatistics(),w}const J=Z.getLogger("esri.views.2d.engine.flow.dataUtils"),ce=10;async function Oe(t,e,n,r){const a=performance.now(),s=fe(e,n),l=performance.now(),c=pe(e,s,n.width,n.height),o=performance.now(),h=me(c,!0),i=performance.now(),u=t==="Streamlines"?ge(h,ce):xe(h),p=performance.now();return nt("esri-2d-profiler")&&(J.info("I.1","_createFlowFieldFromData (ms)",Math.round(l-a)),J.info("I.2","_getStreamlines (ms)",Math.round(o-l)),J.info("I.3","createAnimatedLinesData (ms)",Math.round(i-o)),J.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-i)),J.info("I.5","createFlowMesh (ms)",Math.round(p-a)),J.info("I.6","Mesh size (bytes)",u.vertexData.buffer.byteLength+u.indexData.buffer.byteLength)),await Promise.resolve(),qt(r),u}function fe(t,e){const n=de(e.data,e.width,e.height,t.smoothing);return t.interpolate?(r,a)=>{const s=Math.floor(r),l=Math.floor(a);if(s<0||s>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const c=r-s,o=a-l,h=s,i=l,u=s<e.width-1?s+1:s,p=l<e.height-1?l+1:l,f=n[2*(i*e.width+h)],m=n[2*(i*e.width+u)],d=n[2*(p*e.width+h)],g=n[2*(p*e.width+u)],k=n[2*(i*e.width+h)+1],M=n[2*(i*e.width+u)+1];return[(f*(1-o)+d*o)*(1-c)+(m*(1-o)+g*o)*c,(k*(1-o)+n[2*(p*e.width+h)+1]*o)*(1-c)+(M*(1-o)+n[2*(p*e.width+u)+1]*o)*c]}:(r,a)=>{const s=Math.round(r),l=Math.round(a);return s<0||s>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+s)+0],n[2*(l*e.width+s)+1]]}}function ue(t,e,n,r,a,s,l,c,o){const h=[];let i=n,u=r,p=0,[f,m]=e(i,u);f*=t.velocityScale,m*=t.velocityScale;const d=Math.sqrt(f*f+m*m);let g,k;h.push({x:i,y:u,t:p,speed:d});for(let M=0;M<t.verticesPerLine;M++){let[w,x]=e(i,u);w*=t.velocityScale,x*=t.velocityScale;const y=Math.sqrt(w*w+x*x);if(y<t.minSpeedThreshold)return h;const A=w/y,b=x/y;if(i+=A*t.segmentLength,u+=b*t.segmentLength,p+=t.segmentLength/y,Math.acos(A*g+b*k)>t.maxTurnAngle)return h;if(t.collisions){const v=Math.round(i*o),P=Math.round(u*o);if(v<0||v>l-1||P<0||P>c-1)return h;const U=s[P*l+v];if(U!==-1&&U!==a)return h;s[P*l+v]=a}h.push({x:i,y:u,t:p,speed:y}),g=A,k=b}return h}function pe(t,e,n,r){const a=[],s=new Tt,l=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*l),o=Math.round(r*l),h=new Int32Array(c*o);for(let u=0;u<h.length;u++)h[u]=-1;const i=[];for(let u=0;u<r;u+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)i.push({x:p,y:u,sort:s.getFloat()});i.sort((u,p)=>u.sort-p.sort);for(const{x:u,y:p}of i)if(s.getFloat()<t.density){const f=ue(t,e,u,p,a.length,h,c,o,l);if(f.length<2)continue;a.push(f)}return a}function de(t,e,n,r){if(r===0)return t;const a=Math.round(3*r),s=new Array(2*a+1);let l=0;for(let h=-a;h<=a;h++){const i=Math.exp(-h*h/(r*r));s[h+a]=i,l+=i}for(let h=-a;h<=a;h++)s[h+a]/=l;const c=new Float32Array(t.length);for(let h=0;h<n;h++)for(let i=0;i<e;i++){let u=0,p=0;for(let f=-a;f<=a;f++){if(i+f<0||i+f>=e)continue;const m=s[f+a];u+=m*t[2*(h*e+(i+f))+0],p+=m*t[2*(h*e+(i+f))+1]}c[2*(h*e+i)+0]=u,c[2*(h*e+i)+1]=p}const o=new Float32Array(t.length);for(let h=0;h<e;h++)for(let i=0;i<n;i++){let u=0,p=0;for(let f=-a;f<=a;f++){if(i+f<0||i+f>=n)continue;const m=s[f+a];u+=m*c[2*((i+f)*e+h)+0],p+=m*c[2*((i+f)*e+h)+1]}o[2*(i*e+h)+0]=u,o[2*(i*e+h)+1]=p}return o}function me(t,e){const n=new Tt,r=t.reduce((o,h)=>o+h.length,0),a=new Float32Array(4*r),s=new Array(t.length);let l=0,c=0;for(const o of t){const h=l;for(const i of o)a[4*l+0]=i.x,a[4*l+1]=i.y,a[4*l+2]=i.t,a[4*l+3]=i.speed,l++;s[c++]={startVertex:h,numberOfVertices:o.length,totalTime:o[o.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:a,lineDescriptors:s}}function ge(t,e){const{lineVertices:r,lineDescriptors:a}=t;let s=0,l=0;for(const f of a)s+=2*f.numberOfVertices,l+=6*(f.numberOfVertices-1);const c=new Float32Array(s*9),o=new Uint32Array(l);let h=0,i=0;function u(){o[i++]=h-2,o[i++]=h,o[i++]=h-1,o[i++]=h,o[i++]=h+1,o[i++]=h-1}function p(f,m,d,g,k,M,w,x){const y=h*9;let A=0;c[y+A++]=f,c[y+A++]=m,c[y+A++]=1,c[y+A++]=d,c[y+A++]=M,c[y+A++]=w,c[y+A++]=g/2,c[y+A++]=k/2,c[y+A++]=x,h++,c[y+A++]=f,c[y+A++]=m,c[y+A++]=-1,c[y+A++]=d,c[y+A++]=M,c[y+A++]=w,c[y+A++]=-g/2,c[y+A++]=-k/2,c[y+A++]=x,h++}for(const f of a){const{totalTime:m,timeSeed:d}=f;let g=null,k=null,M=null,w=null,x=null,y=null;for(let A=0;A<f.numberOfVertices;A++){const b=r[4*(f.startVertex+A)+0],v=r[4*(f.startVertex+A)+1],P=r[4*(f.startVertex+A)+2],U=r[4*(f.startVertex+A)+3];let B=null,I=null,S=null,F=null;if(A>0){B=b-g,I=v-k;const T=Math.sqrt(B*B+I*I);if(B/=T,I/=T,A>1){let $=B+x,C=I+y;const V=Math.sqrt($*$+C*C);$/=V,C/=V;const j=Math.min(1/($*B+C*I),e);$*=j,C*=j,S=-C,F=$}else S=-I,F=B;S!==null&&F!==null&&(p(g,k,M,S,F,m,d,U),u())}g=b,k=v,M=P,x=B,y=I,w=U}p(g,k,M,-y,x,m,d,w)}return{vertexData:c,indexData:o}}function xe(t){const{lineVertices:a,lineDescriptors:s}=t;let l=0,c=0;for(const T of s){const $=T.numberOfVertices-1;l+=4*$*2,c+=6*$*2}const o=new Float32Array(l*16),h=new Uint32Array(c);let i,u,p,f,m,d,g,k,M,w,x,y,A,b,v=0,P=0;function U(){h[P++]=v-8,h[P++]=v-7,h[P++]=v-6,h[P++]=v-7,h[P++]=v-5,h[P++]=v-6,h[P++]=v-4,h[P++]=v-3,h[P++]=v-2,h[P++]=v-3,h[P++]=v-1,h[P++]=v-2}function B(T,$,C,V,j,z,q,W,H,Q,ot,it,st,lt){const D=v*16;let N=0;for(const pt of[1,2])for(const Dt of[1,2,3,4])o[D+N++]=T,o[D+N++]=$,o[D+N++]=C,o[D+N++]=V,o[D+N++]=q,o[D+N++]=W,o[D+N++]=H,o[D+N++]=Q,o[D+N++]=pt,o[D+N++]=Dt,o[D+N++]=st,o[D+N++]=lt,o[D+N++]=j/2,o[D+N++]=z/2,o[D+N++]=ot/2,o[D+N++]=it/2,v++}function I(T,$){let C=M+x,V=w+y;const j=Math.sqrt(C*C+V*V);C/=j,V/=j;const z=M*C+w*V;C/=z,V/=z;let q=x+A,W=y+b;const H=Math.sqrt(q*q+W*W);q/=H,W/=H;const Q=x*q+y*W;q/=Q,W/=Q,B(i,u,p,f,-V,C,m,d,g,k,-W,q,T,$),U()}function S(T,$,C,V,j,z){if(M=x,w=y,x=A,y=b,M==null&&w==null&&(M=x,w=y),m!=null&&d!=null){A=T-m,b=$-d;const q=Math.sqrt(A*A+b*b);A/=q,b/=q}M!=null&&w!=null&&I(j,z),i=m,u=d,p=g,f=k,m=T,d=$,g=C,k=V}function F(T,$){M=x,w=y,x=A,y=b,M==null&&w==null&&(M=x,w=y),M!=null&&w!=null&&I(T,$)}for(const T of s){i=null,u=null,p=null,f=null,m=null,d=null,g=null,k=null,M=null,w=null,x=null,y=null,A=null,b=null;const{totalTime:$,timeSeed:C}=T;for(let V=0;V<T.numberOfVertices;V++)S(a[4*(T.startVertex+V)+0],a[4*(T.startVertex+V)+1],a[4*(T.startVertex+V)+2],a[4*(T.startVertex+V)+3],$,C);F($,C)}return{vertexData:o,indexData:h}}function Ut(t,e){const n=e.pixels,{width:r,height:a}=e,s=new Float32Array(r*a*2),l=e.mask||new Uint8Array(r*a*2);if(e.mask||l.fill(255),t==="vector-uv")for(let c=0;c<r*a;c++)s[2*c+0]=n[0][c],s[2*c+1]=-n[1][c];else if(t==="vector-magdir")for(let c=0;c<r*a;c++){const o=n[0][c],h=Xt(n[1][c]),i=Math.cos(h-Math.PI/2),u=Math.sin(h-Math.PI/2);s[2*c+0]=i*o,s[2*c+1]=u*o}return{data:s,mask:l,width:r,height:a}}async function qe(t,e,n,r,a,s){const l=performance.now(),c=Gt(e.spatialReference);if(!c){const x=await $t(t,e,n,r,a,s);return nt("esri-2d-profiler")&&J.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-l)),nt("esri-2d-profiler")&&J.info("I.9","Number of parts",1),x}const[o,h]=c.valid,i=h-o,u=Math.ceil(e.width/i),p=e.width/u,f=Math.round(n/u);let m=e.xmin;const d=[],g=performance.now();for(let x=0;x<u;x++){const y=new Wt({xmin:m,xmax:m+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});d.push($t(t,y,f,r,a,s)),m+=p}const k=await Promise.all(d);nt("esri-2d-profiler")&&J.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),nt("esri-2d-profiler")&&J.info("I.9","Number of parts",k.length);const M={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let w=0;for(const x of k){for(let y=0;y<x.height;y++)for(let A=0;A<x.width;A++)w+A>=n||(M.data[2*(y*n+w+A)+0]=x.data[2*(y*x.width+A)+0],M.data[2*(y*n+w+A)+1]=x.data[2*(y*x.width+A)+1],M.mask[y*n+w+A]=x.mask[y*x.width+A]);w+=x.width}return nt("esri-2d-profiler")&&J.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-l)),M}async function $t(t,e,n,r,a,s){const l={requestProjectedLocalDirections:!0,signal:s};if(L(a)&&(l.timeExtent=a),t.type==="imagery"){await t.load({signal:s});const h=t.rasterInfo.dataType,i=await t.fetchImage(e,n,r,l);return!i||K(i.pixelData)||K(i.pixelData.pixelBlock)?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:Ut(h,i.pixelData.pixelBlock)}await t.load({signal:s});const c=t.rasterInfo.dataType,o=await t.fetchPixels(e,n,r,l);return!o||K(o.pixelBlock)?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:Ut(c,o.pixelBlock)}export{Be as A,ct as B,wt as C,he as D,Re as E,Ee as F,Se as M,Ve as R,Fe as S,Ce as T,qe as a,Qt as b,De as c,Pt as d,_e as e,Le as f,Oe as g,Ae as h,R as i,je as j,Pe as k,$e as l,_ as m,ve as n,be as o,Ue as p,Mt as q,kt as r,ut as s,Me as t,ke as u,Ie as v,It as w,Ne as x,Te as y,Ft as z};
