import{t as g,q as p,r as c,ag as f,ah as w,T as V,ai as D,f as _,aj as T,ak as $,al as S,am as b,an as L,s as k,ao as x,U as y,a7 as I,_ as v,L as o,N as l,ap as N,aq as E,ar as O,P,as as j}from"./index-5df536c7.js";import{s as A}from"./ArcGISCachedService-f3f3c3c9.js";import"./TilemapCache-4b3f822a.js";class M{constructor(e,t,i,r){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=i,this.noDataValue=r)}get hasNoDataValues(){if(g(this._hasNoDataValues)){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),p(this._minValue)}get maxValue(){return this._ensureBounds(),p(this._maxValue)}_ensureBounds(){if(c(this._minValue))return;const{noDataValue:e,values:t}=this;let i=1/0,r=-1/0,h=!0;for(const n of t)n===e?this._hasNoDataValues=!0:(i=n<i?n:i,r=n>r?n:r,h=!1);h?(this._minValue=0,this._maxValue=0):(this._minValue=i,this._maxValue=r>-3e38?r:0)}}class U{constructor(e,t,i,r,h={}){this._mainMethod=t,this._transferLists=i,this._listeners=[],this._promise=f(e,{...h,schedule:r}).then(n=>{if(this._thread===void 0){this._thread=n,this._promise=null,h.hasInitialize&&this.broadcast({},"initialize");for(const d of this._listeners)this._connectListener(d)}else n.close()}),this._promise.catch(n=>w.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${n}`))}on(e,t){const i={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(i),this._connectListener(i),V(()=>{i.removed=!0,D(this._listeners,i),this._thread&&c(i.threadHandle)&&i.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,i){if(this._thread){const r=this._transferLists[e],h=r?r(t):[];return this._thread.invoke(e,t,{transferList:h,signal:i})}return this._promise?this._promise.then(()=>(_(i),this.invokeMethod(e,t,i))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class m extends U{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(u.forEach((e,t)=>{e===this&&u.delete(t)}),this.destroy())}}const u=new Map;function q(s=null){let e=u.get(p(s));return e||(c(s)?(e=new m(t=>s.immediate.schedule(t)),u.set(s,e)):(e=new m,u.set(null,e))),++e.ref,e}let a=class extends A(T($(S(b(j))))){constructor(...s){super(...s),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=q()}normalizeCtorArgs(s,e){return typeof s=="string"?{url:s,...e}:s}destroy(){this._lercDecoder=L(this._lercDecoder)}readVersion(s,e){let t=e.currentVersion;return t||(t=9.3),t}load(s){const e=c(s)?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let i=0;i<t.typeKeywords.length;i++)if(t.typeKeywords[i].toLowerCase()==="elevation 3d layer")return!0;throw new k("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},s).catch(x).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(s,e,t,i){const r=c((i=i||{signal:null}).signal)?i.signal:i.signal=new AbortController().signal,h={responseType:"array-buffer",signal:r},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(s,e,t,i)).then(()=>y(this.getTileUrl(s,e,t),h)).then(d=>this._lercDecoder.decode(d.data,n,r)).then(d=>new M(d))}getTileUrl(s,e,t){const i=!this.tilemapCache&&this.supportsBlankTile,r=I({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${s}/${e}/${t}${r?"?"+r:""}`}async queryElevation(s,e){const{ElevationQuery:t}=await v(()=>import("./ElevationQuery-794c36eb.js"),["assets/ElevationQuery-794c36eb.js","assets/index-5df536c7.js","assets/index-308b4aa0.css"]);return _(e),new t().query(this,s,e)}async createElevationSampler(s,e){const{ElevationQuery:t}=await v(()=>import("./ElevationQuery-794c36eb.js"),["assets/ElevationQuery-794c36eb.js","assets/index-5df536c7.js","assets/index-308b4aa0.css"]);return _(e),new t().createSampler(this,s,e)}_fetchTileAvailability(s,e,t,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(s,e,t,i):Promise.resolve("unknown")}async _fetchImageService(s){var i;if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:s},t=await y(this.parsedUrl.path,e);t.ssl&&(this.url=(i=this.url)==null?void 0:i.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};o([l({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),o([l({readOnly:!0,type:E})],a.prototype,"heightModelInfo",void 0),o([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),o([l({type:["show","hide"]})],a.prototype,"listMode",void 0),o([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),o([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),o([l({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),o([l({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),o([l()],a.prototype,"sourceJSON",void 0),o([l({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),o([l(O)],a.prototype,"url",void 0),o([l()],a.prototype,"version",void 0),o([N("version",["currentVersion"])],a.prototype,"readVersion",null),a=o([P("esri.layers.ElevationLayer")],a),a.prototype.fetchTile.__isDefault__=!0;const J=a;export{J as default};
